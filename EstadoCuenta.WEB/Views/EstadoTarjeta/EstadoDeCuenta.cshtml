@model EstadoCuenta.WEB.Models.EstadoCuentaVM

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
    .btn-exportar-excel {
        background-color: #198754 !important;
        color: white !important;
    }

    .btn-exportar-pdf {
        background-color: #dc3545 !important;
        color: white !important;
    }

    .btn-exportar-print {
        background-color: #00a7c9 !important;
        color: white !important;
    }
</style>

<div class="container mt-4" id="contenidoCompleto">
    <!-- Contenedor completo con ID -->
    <h2 class="text-center mb-4">Estado de Cuenta - Tarjeta de Crédito</h2>

    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Titular de la Tarjeta: @Model.Titular</h5>
            <p class="card-text">Número de Tarjeta: @Model.Tarjeta</p>
            <p class="card-text">Saldo Actual: @Model.TotalSaldoFormatted</p>
            <p class="card-text">Límite de Crédito: @Model.CreditoLimiteFormatted</p>
            <p class="card-text">Saldo Disponible: @Model.DisponibleSaldoFormatted</p>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Transacciones Realizadas</h5>
            <table id="tablaTransacciones" class="table table-hover table-responsive table-striped">
                <thead>
                    <tr>
                        <th>Tipo</th>
                        <th>Monto</th>
                        <th>Fecha</th>
                        <th>Descripción</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Transacciones == null || !Model.Transacciones.Any())
                    {
                        <tr>
                            <td colspan="4">No hay transacciones disponibles</td>
                        </tr>
                    }
                    else
                    {
                        foreach (var transaccion in Model.Transacciones)
                        {
                            <tr>
                                <td>@transaccion.Tipo</td>
                                <td>@transaccion.MontoFormatted</td>
                                <td>@transaccion.Fecha.ToString("yyyy-MM-dd")</td>
                                <td>@transaccion.Descripcion</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">Detalles de Intereses y Cuotas</h5>
            <p><strong>Bonificación de Interés: </strong>@Model.BonificacionInteresFormatted</p>
            <p><strong>Cuota Mínima: </strong>@Model.MinimoCuotaFormatted</p>
            <p><strong>Total a Pagar: </strong>@Model.TotalAPagarFormatted</p>
            <p><strong>Pago de Contado con Intereses: </strong>@Model.ContadoConInteresesFormatted</p>
        </div>
    </div>
</div>

    <!-- Botón de exportación fuera del contenedor a exportar -->
    <div class="text-center mb-4">
        <button class="btn btn-exportar-pdf" id="exportPDFButton">Exportar Estado de Cuenta en PDF</button>
    </div>
    <!-- Required JS libraries -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.js"></script>

    <script>// Función para exportar el contenido completo a PDF
        document.getElementById('exportPDFButton').addEventListener('click', function () {
            var element = document.getElementById('contenidoCompleto'); // Selecciona todo el contenedor

            // Usamos html2pdf.js para convertir el contenido completo a PDF
            var opt = {
                margin: 0.5,  // Ajusta el margen superior
                filename: 'estado_de_cuenta.pdf',
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2, letterRendering: true },
                jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
            };

            // Se asegura que solo el contenido del contenedor se exporte, excluyendo el botón
            html2pdf().from(element).set(opt).save(); // Convierte y guarda el PDF
        });</script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js" crossorigin="anonymous"></script>
